{$DOMAIN:localhost} {
	# Most specific routes first - WebSocket
	handle /api/ws {
		reverse_proxy backend:8000 {
			header_up Upgrade {http.request.header.upgrade}
			header_up Connection {http.request.header.connection}
		}
	}

	# API routes - forward with /api prefix intact
	handle /api/* {
		reverse_proxy backend:8000
	}

	# Documentation routes
	handle /docs* {
		reverse_proxy backend:8000
	}

	handle /redoc* {
		reverse_proxy backend:8000
	}

	handle /openapi.json {
		reverse_proxy backend:8000
	}

	# Webhook routes
	handle /webhook/* {
		reverse_proxy backend:8000
	}

	# Static site - catch everything else
	handle {
		root * /var/www/static
		file_server
		try_files {path} {path}/ /index.html
	}
    
	# Security headers
	header {
		X-Content-Type-Options nosniff
		X-Frame-Options DENY
		X-XSS-Protection "1; mode=block"
		Referrer-Policy strict-origin-when-cross-origin

		# CORS headers for extension
		Access-Control-Allow-Origin "chrome-extension://*"
		Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
		Access-Control-Allow-Headers "Authorization, Content-Type"
		Access-Control-Max-Age "86400"
	}

	# Handle CORS preflight requests
	@options {
		method OPTIONS
	}
	respond @options 204

	# Compression
	encode gzip zstd

	# Logging
	log {
		output file /data/access.log
		format json
	}
}